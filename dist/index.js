import{EventEmitter as l}from"events";import{open as h}from"lmdbx";var p=class extends l{env;dbs;constructor(e,n){super(),this.env=h(e,n),this._patch(this.env,"root"),this.dbs=new Map}_patch(e,n){let t=e.put.bind(e),r=e.remove.bind(e),u=this;function m(o,a,s,i){let b;return t(o,a,s,i).then(v=>{typeof s=="number"&&(b=s);let f=e.getBinary(o);return u.emit("change",{type:"put",bucket:n,id:o,value:f,version:b}),v})}function c(o,a){let s;typeof a=="number"&&(s=a);let i=e.get(o);return u.emit("change",{type:"remove",bucket:n,id:o,value:i,version:s}),r(o,a)}e.put=m,e.remove=c}bucket(e,n){let t=this.dbs.get(e);if(!t){let r={cache:!0,...n};t=this.env.openDB(e,r),this.dbs.set(e,t),this._patch(t,e)}return t}};export{p as Store};
//# sourceMappingURL=index.js.map